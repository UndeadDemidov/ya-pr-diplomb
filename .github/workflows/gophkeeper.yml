name: GophKeeper

on:
  push:
    branches:
      - '*'
#      - '!master'
  pull_request:
    branches: [main]

jobs:
#  audit job performs a set of checks
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true
          cache: true
      - run: go version
      - run: ls /home/runner/go/bin

      - name: Cache go tools
        id: cache-go-tools
        uses: actions/cache@v3
        with:
          path: |
            /usr/bin/protoc
            /home/runner/go/bin
          key: ${{ runner.os }}-go-tools

      - name: Install go-tools
        if: steps.cache-go-tools.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version
          make install-tools

      - name: Cache googleapis repo
        id: cache-googleapis
        uses: actions/cache@v3
        with:
          path: googleapis
          key: ${{ runner.os }}-googleapis

      - name: Git submodule googleapis
        if: steps.cache-googleapis.outputs.cache-hit != 'true'
        run: git submodule add --force https://github.com/googleapis/googleapis

      - name: Verify dependencies
        run: go mod verify

      - name: Generate
        run: |
          make gen
          which protoc-gen-grpc-gateway
          which protoc-gen-openapiv2
          which protoc-gen-go
          which protoc-gen-go-grpc
          which mockgen
          which staticcheck
          which golint

      - name: Build
        run: go build -v ./...

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Run golint
        run: golint ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: golangci-lint command line arguments.
          args: --enable-all

            # Optional: show only new issues if it's a pull request. The default value is `false`.
            # only-new-issues: true

            # Optional: if set to true then the all caching functionality will be complete disabled,
            #           takes precedence over all other caching options.
            # skip-cache: true

            # Optional: if set to true then the action don't cache or restore ~/go/pkg.
            # skip-pkg-cache: true

            # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
            # skip-build-cache: true

      - name: Run tests
        run: make test