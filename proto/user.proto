// protoc --go_out=plugins=grpc:. *.proto

syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

package userService;
option go_package = ".;userService";

message Credentials {
  string email = 1 [(google.api.field_behavior) = REQUIRED];
  string password = 2 [(google.api.field_behavior) = REQUIRED];
}

message User {
  string uuid = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  google.protobuf.Timestamp created_at = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  google.protobuf.Timestamp updated_at = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message SignUpRequest {
  User user = 1;
  Credentials credentials = 2;
}

message SignInRequest {
  Credentials credentials = 1;
}

message SignInResponse {
  string access_token = 1;
  User user = 2;
}

service UserService{
  rpc SignUp(SignUpRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/auth/signin"
      body: "*" // pass creds in body is safe versus pass them in URL parameters
    };
  }
  rpc SignIn(SignInRequest) returns (SignInResponse) {
    option (google.api.http) = {
      post: "/v1/auth/signon"
      body: "credentials" // pass creds in body is safe versus pass them in URL parameters
    };
  }
  rpc SignOut(google.protobuf.Empty) returns(google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/auth/signout"
    };
  }
}